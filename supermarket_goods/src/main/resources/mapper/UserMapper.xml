<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.supermarketgoods.dao.UserDao">

    <resultMap id="BaseResultMap" type="com.supermarketgoods.entity.User">
        <result column="user_id" property="userId" jdbcType="INTEGER" />
        <result column="user_name" property="userName" jdbcType="VARCHAR" />
        <result column="password" property="password" jdbcType="VARCHAR" />
        <result column="true_name" property="trueName" jdbcType="VARCHAR" />
        <result column="roles" property="roles" jdbcType="VARCHAR" />
        <result column="remarks" property="remarks" jdbcType="VARCHAR" />
    </resultMap>

    <select id="findUserByName" resultMap="BaseResultMap">
        SELECT
            user.user_id,
            user.user_name,
            user.`password`,
            user.true_name,
            user.roles,
            user.remarks
        FROM
            user
        WHERE
            user.user_name = #{userName}
    </select>

    <select id="getUserList" resultMap="BaseResultMap">
        SELECT
            user.user_id,
            user.user_name,
            user.`password`,
            user.true_name,
            user.roles,
            user.remarks
        FROM
            user
        <where>
            <if test="userName != null and userName != ''">
                user.user_name LIKE CONCAT('%', #{userName} ,'%')
            </if>
            AND user.user_name != 'admin'
        </where>
        LIMIT #{offSet}, #{pageRow}
    </select>

    <select id="getUserCount" resultType="java.lang.Integer">
        SELECT
          COUNT(*)
        FROM
        user
        <where>
            <if test="userName != null and userName != ''">
                user.user_name LIKE CONCAT('%', #{userName} ,'%')
            </if>
            AND user.user_name != 'admin'
        </where>
    </select>

    <insert id="addUser" useGeneratedKeys="true" keyProperty="userId" parameterType="com.supermarketgoods.entity.User">
        INSERT INTO user
        (user_name, password, true_name, roles, remarks)
        VALUES (#{userName}, #{password}, #{trueName}, #{roles}, #{remarks})
    </insert>

    <update id="updateUser" parameterType="com.supermarketgoods.entity.User">
        UPDATE user
        <set>
            <if test="userName != '' and userName != null">
                user_name = #{userName},
            </if>
            <if test="password != '' and password != null">
                password = #{password},
            </if>
            <if test="trueName != '' and trueName != null">
                true_name = #{trueName},
            </if>
            <if test="roles != '' and roles != null">
                roles = #{roles},
            </if>
            <if test="remarks != '' and remarks != null">
                remarks = #{remarks},
            </if>
        </set>
        WHERE user_id = #{userId}
    </update>

    <select id="getUserById" resultMap="BaseResultMap">
        SELECT
            user.user_id,
            user.user_name,
            user.`password`,
            user.true_name,
            user.roles,
            user.remarks
        FROM
            user
        WHERE
            user_id = #{userId}
    </select>

    <delete id="deleteUser" parameterType="java.lang.Integer">
        DELETE FROM
        user
        WHERE user_id = #{userId}
    </delete>

</mapper>
